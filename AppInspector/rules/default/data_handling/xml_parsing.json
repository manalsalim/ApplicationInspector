[
  {
    "name": "Data: Parses XML",
    "id": "AI014100",
    "description": "Data: Parses XML",
    "tags": [
      "Data.Parsing.XML"
    ],
    "severity": "critical",
    "patterns": [
      {
        "pattern": "sax|xpath|xmldom|xelement|xmldocument",
        "type": "regex-word",
        "confidence": "high",
        "scopes": [
          "code"
        ]
      }
    ]
  },
  {
    "name": "Data: Parses XML",
    "id": "AI014200",
    "description": "Data: Parses XML",
    "applies_to": [ "python" ],
    "tags": [
      "Data.Parsing.XML"
    ],
    "severity": "critical",
    "patterns": [
      {
        "pattern": "lxml|etree|ElementTree|minidom|pulldom|xmlrpc",
        "type": "regex-word",
        "confidence": "high",
        "scopes": [
          "code"
        ]
      }
    ]
  },
  {
    "name": "Data: Parses XML",
    "id": "AI014300",
    "description": "Data: Parses XML",
    "applies_to": [ "javascript" ],
    "tags": [
      "Data.Parsing.XML"
    ],
    "severity": "critical",
    "patterns": [
      {
        "pattern": "parseFromString\\(.*,\"text\/xml\"\\)|xhttp\\.responseXML",
        "type": "regex-word",
        "confidence": "high",
        "scopes": [
          "code"
        ]
      }
    ]
  },
  {
    "name": "Data: Parses XML",
    "id": "AI014400",
    "description": "Data: Parses XML",
    "applies_to": [ "java" ],
    "tags": [
      "Data.Parsing.XML"
    ],
    "severity": "critical",
    "patterns": [
      {
        "pattern": "jdom2|SAXBuilder",
        "type": "regex-word",
        "confidence": "high",
        "scopes": [
          "code"
        ]
      }
    ]
  },
  {
    "name": "Data: XSLT Transformations",
    "id": "AI014500",
    "description": "Data: XSLT Transformations",
    "applies_to": [ "csharp" ],
    "tags": [
      "Data.Parsing.XSLT"
    ],
    "severity": "critical",
    "patterns": [
      {
        "pattern": "XslTransform|System\\.Xml\\.Xsl|XslCompiledTransform|transformNode",
        "type": "regex",
        "confidence": "high",
        "scopes": [
          "code"
        ]
      }
    ]
  },
  {
    "name": "Data: XSLT Transformations",
    "id": "AI014600",
    "description": "Data: XSLT Transformations",
    "applies_to": [ "java" ],
    "tags": [
      "Data.Parsing.XSLT"
    ],
    "severity": "critical",
    "patterns": [
      {
        "pattern": "TransformerFactory|XSLDocument|javax\\.xml\\.transform",
        "type": "regex",
        "confidence": "high",
        "scopes": [
          "code"
        ]
      }
    ]
  },
  {
    "name": "Data: XSLT Transformations",
    "id": "AI014700",
    "description": "Data: XSLT Transformations",
    "applies_to": [ "javascript" ],
    "tags": [
      "Data.Parsing.XSLT"
    ],
    "severity": "critical",
    "patterns": [
      {
        "pattern": "XSLTProcessor",
        "type": "regex",
        "confidence": "high",
        "scopes": [
          "code"
        ]
      }
    ]
  },
  {
    "name": "Data: XSLT Transformations",
    "id": "AI014800",
    "description": "Data: XSLT Transformations",
    "tags": [
      "Data.Parsing.XSLT"
    ],
    "severity": "critical",
    "patterns": [
      {
        "pattern": "\\.xslt",
        "type": "regex",
        "confidence": "high",
        "scopes": [
          "code"
        ]
      }
    ],
    "conditions": [
      {
        "pattern": {
          "pattern": "exclude",
          "type": "regex",
          "scopes": [
            "code"
          ],
          "modifiers": [ "i" ],
          "_comment": ""
        },
        "search_in": "finding-region(0,0)",
        "negate_finding": true,
        "_comment": ""
      }
    ]
  },
  {
    "name": "Data: XSLT Transformations",
    "id": "AI014900",
    "description": "Data: XSLT Transformations",
    "tags": [
      "Data.Parsing.XSLT"
    ],
    "severity": "critical",
    "patterns": [
      {
        "pattern": "xslt|xsl:stylesheet",
        "type": "regex-word",
        "modifiers": [ "i" ],
        "confidence": "high",
        "scopes": [
          "code"
        ]
      }
    ],
    "conditions": [
      {
        "pattern": {
          "pattern": "exclude",
          "type": "regex-word",
          "scopes": [
            "code"
          ],
          "modifiers": [ "i" ],
          "_comment": ""
        },
        "search_in": "finding-region(0,0)",
        "negate_finding": true,
        "_comment": ""
      }
    ]
  }
]